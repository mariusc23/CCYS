<?php

function pippin_stripe_process_payment() {
	if(isset($_POST['action']) && $_POST['action'] == 'stripe' && wp_verify_nonce($_POST['stripe_nonce'], 'stripe-nonce')) {
		
		global $stripe_options;
		
		// load the stripe libraries
		require_once(STRIPE_BASE_DIR . '/lib/Stripe.php');
		
		$amount = base64_decode($_POST['amount']) * 100;
		$description = '';
		$description = $_POST['child-name'];
		
		// retrieve the token generated by stripe.js
		$token = $_POST['stripeToken'];

		// check if we are using test mode
		if(isset($stripe_options['test_mode']) && $stripe_options['test_mode']) {
			$secret_key = $stripe_options['test_secret_key'];
		} else {
			$secret_key = $stripe_options['live_secret_key'];
		}
		
		Stripe::setApiKey($secret_key);
		
		if(isset($_POST['recurring']) && $_POST['recurring'] == 'yes') { // process a recurring payment
		
			// recurring payment setup will go here
			try {			
				$customer = Stripe_Customer::create(array(
						'card' => $token,
						'plan' => $stripe_options['plan_id']
					)
				);	
				
				// redirect on successful recurring payment setup
				$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);
				
			} catch (Exception $e) {
				// redirect on failure
				$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
			}
		
		} else { // process a one-time payment
		
			// attempt to charge the customer's card
			try {
				$charge = Stripe_Charge::create(array(
						'amount' => $amount, // amount in cents
						'currency' => 'usd',
						'card' => $token,
						'description' => $description
					)
				);
										
				// redirect on successful payment
				$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);
				
			} catch (Exception $e) {
				// redirect on failed payment
				$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
			}
		}
		
		// redirect back to our previous page with the added query variable
		wp_redirect($redirect); exit;
	}
}
add_action('init', 'pippin_stripe_process_payment');